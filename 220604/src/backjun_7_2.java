import java.util.Scanner;

public class backjun_7_2 {

	public static void main(String[] args) {
		//1로 부터 같은 거리내(같은 범위내)에 있는 숫자까지의 거리를 계산
		Scanner sc = new Scanner(System.in);
 
		int n=Integer.parseInt(sc.next()); //우리가 거리 계산하고자하는 숫자
		int count=1; // 같은 범위(최초 범위=1) 
		int range=2; // 다음 범위 최소값
		//위에 초기화된 변수의 의미
		//거리가 1인 숫자들 범위의 최소값이 2라는 뜻
		
		sc.close();
		
		//입력한 숫자가 3
		//3은 2보다 크다(2라는 숫자의 의미는 거리 1인 범위의 최소값)
		//근데 8보다 작다(8이라는 숫자의 의미는 거리가 2인 범위의 최소값)
		//즉, 3이라는 숫자는
		//거리가 1인 범위내에 있다는 소리
		//따라서 답은 1
		
		//어떤 사용자로부터 받는 변수가
		//반복 횟수의 기준이 된다 >> for문
		
		//해당 변수를 가지고 무언가를 찾아야한다
		//무한반복을 한다는 소리
		//while문
		//중요! 언제 while문을 나가냐
		
		if (n==1) {
			System.out.print(1);
			//거리가 0부터 시작하지않고
			//1부터 시작하기때문에 n이 1일때 1인 것
		} else {
			while (range<=n) { //입력한 수와 해당 범위의 최소값과 비교 >> true 이면 아래 구현부 수행
				range=range+(6*count); // 다음 범위 최소값으로 초기화
				count++; //범위 1증가
			}
			//사용자가 24를 찍었다 치면
			
			//2<24 첫번째 반복을 수행
			//최소값을 2+(6*1)=8로 초기화 하고
			//범위(idx)를 2로 초기화
			
			//8<24 두번째 반복을 수행
			//최소값을 8+(6*2)=20으로 초기화
			//범위(idx)를 3으로 초기화
			
			//20<24 세번째 반복을 수행
			//최소값을 20+(6*3)=38로 초기화
			//범위(idx)를 4로 초기화
			
			//38<24 >> false
			//while을 탈출하고
			//범위(idx)가 4인 상태로 print
			System.out.print(count);
		}
	}

}
